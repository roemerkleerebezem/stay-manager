{"remainingRequest":"/home/roemer/Documents/2019/stay-manager/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/roemer/Documents/2019/stay-manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/roemer/Documents/2019/stay-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roemer/Documents/2019/stay-manager/src/components/form-stay.vue?vue&type=template&id=9a66e63c&","dependencies":[{"path":"/home/roemer/Documents/2019/stay-manager/src/components/form-stay.vue","mtime":1574443725660},{"path":"/home/roemer/Documents/2019/stay-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roemer/Documents/2019/stay-manager/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/roemer/Documents/2019/stay-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roemer/Documents/2019/stay-manager/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}