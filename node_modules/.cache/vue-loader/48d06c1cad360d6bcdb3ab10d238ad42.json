{"remainingRequest":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\roemer\\Documents\\2019\\stay-manager\\src\\components\\form-stay.vue?vue&type=template&id=9a66e63c&","dependencies":[{"path":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\src\\components\\form-stay.vue","mtime":1576953421883},{"path":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576626834856},{"path":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1576626847671},{"path":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576626834856},{"path":"C:\\Users\\roemer\\Documents\\2019\\stay-manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1576626847671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}